#version 450

layout (local_size_x = 16, local_size_y = 16) in;
layout (binding = 0) uniform sampler2D sourceColor;
layout (binding = 1) uniform sampler2D sourceDepth;
layout (binding = 2, rgba16) uniform image2D targetColor;
layout (binding = 3, r16) uniform image2D targetDepth;
layout (binding = 4) uniform UniformBufferObject {
    ivec2 shift;
} ubo;

void main()
{
    vec4 sColor = texture(sourceColor, ivec2(gl_GlobalInvocationID.xy));
    vec4 sDepth = texture(sourceDepth, ivec2(gl_GlobalInvocationID.xy));
    vec4 prevColor = imageLoad(targetColor, ivec2(gl_GlobalInvocationID.xy) + ubo.shift);
    vec4 color = vec4(sColor.xyz * sColor.w + prevColor.xyz * prevColor.w, sColor.w + prevColor.w);
    color /= color.w;
    imageStore(targetColor, ivec2(gl_GlobalInvocationID.xy * 2) + ubo.shift, sColor);
    imageStore(targetDepth, ivec2(gl_GlobalInvocationID.xy * 2) + ubo.shift, sDepth);
}